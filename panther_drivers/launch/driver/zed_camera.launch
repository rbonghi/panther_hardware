<?xml version="1.0"?>
<!--
Copyright (C) 2020, Raffaello Bonghi <raffaello@rnext.it>
All rights reserved
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
1. Redistributions of source code must retain the above copyright 
   notice, this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.
3. Neither the name of the copyright holder nor the names of its 
   contributors may be used to endorse or promote products derived 
   from this software without specific prior written permission.
 
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, 
BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<launch>
  <arg name="scan_processing"       default="false" />
  <!-- Output
        - screen
        - log
       -->
  <arg name="output"          default="log" />
  <!-- Machine name if default run in localhost -->
  <arg name="machine"         default="_default_" />
  
  <group if="$(eval arg('machine') == '_default_')">
    <machine name="_default_" address="localhost" default="never" timeout="10"/>
  </group>
    
  <!-- Camera Model and Name -->
  <arg name="camera_name"           default="zed2" /> <!-- The name you want -->
  <arg name="camera_model"          default="zed2" /> <!-- 'zed' or 'zedm' or 'zed2' -->
  <arg name="node_name"             default="zed_node" />

  <!-- Load SVO file -->
  <arg name="svo_file"              default="" /><!-- <arg name="svo_file" default="path/to/svo/file.svo"> -->
  <!-- Remote stream -->
  <arg name="stream"                default="" /> <!-- <arg name="stream" default="<ip_address>:<port>"> -->

  <arg name="camera_id"             default="0" />
  <arg name="gpu_id"                default="-1" />

  <node machine="$(arg machine)" name="$(arg node_name)" pkg="zed_wrapper" type="zed_wrapper_node" output="$(arg output)" required="true"><!-- launch-prefix="valgrind" -->
    <rosparam file="$(find zed_wrapper)/params/common.yaml" command="load" />
    <rosparam file="$(find zed_wrapper)/params/$(arg camera_model).yaml" command="load" />
    <rosparam subst_value="true">
      pos_tracking:
          publish_tf:                 false                            # publish `odom -> base_link` TF
          publish_map_tf:             false                            # publish `map -> odom` TF
    </rosparam>
    <!-- Camera name -->
    <param name="general/camera_name"               value="$(arg camera_name)" />

    <!-- SVO file path -->
    <param name="svo_file"                          value="$(arg svo_file)" />

    <!-- Remote stream -->
    <param name="stream"                            value="$(arg stream)" />

    <!-- Camera ID -->
    <param name="general/zed_id"                    value="$(arg camera_id)" />

    <!-- GPU ID -->
    <param name="general/gpu_id"                    value="$(arg gpu_id)" />
  </node>

  <!-- TODO: Fix depthimage_to_laserscan -->
  <group if="$(arg scan_processing)">
    <node machine="$(arg machine)" name="depthimage_to_laserscan" pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" output="$(arg output)">
      <param name="scan_height" value="7"/>
      <param name="output_frame_id" value="$(arg cloud_frame_id)"/>
      <param name="range_min" value="0.1"/>
      <remap from="image" to="depth/depth_registered"/>
      <remap from="camera_info" to="depth/camera_info"/>
      <remap from="scan" to="$(arg scan_topic)"/>
    </node>
  </group>

</launch>
